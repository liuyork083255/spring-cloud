logging.level.root=info
# 注册 consul 配置
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500

# 本服务端口
server.port=80
# 本服务名称
spring.application.name=ZUUL-SERVER
spring.cloud.consul.discovery.service-name=${spring.application.name}
# consul 心跳检测时间间隔
spring.cloud.consul.discovery.health-check-interval=5s
# consul 心跳检测访问 uri
spring.cloud.consul.discovery.health-check-path=/health


# 路由配置方式1
# zuul.routes.<uri>.path|url 中的uri不是真实的匹配路径，而是自定义命名，核心是path和url
#zuul.routes.user.path = /user/**
#zuul.routes.user.url = http://localhost:9001/user
#zuul.routes.order.path = /order/**
#zuul.routes.order.url = http://localhost:9002/order

# 路由配置方式2
# 可以看出，如果url规则很乱，而且很多，那么这种方式配置比较难维护，所以zuul可以和服务发现组合使用
# serviceId 就是服务名称
#zuul.routes.user-zuul.path = /user-zuul/**
#zuul.routes.user-zuul.serviceId = USER-SERVER
#zuul.routes.order-zuul.path = /order-zuul/**
#zuul.routes.order-zuul.serviceId = ORDER-SERVER

# 路由配置方式3  zuul.routes.<xxx> 中xxx直接表示服务名称
zuul.routes.USER-SERVER = /user-zuul/**
#zuul.routes.ORDER-SERVER = /order-zuul/**

# 过滤服务，即不参与路由的资源服务, 排除所有，需要路由的要一个一个加在routes里面
zuul.ignored-services = *

# 过滤 uri e.g.  下面的配置方式就是只有uri服务下面的就会被忽略
zuul.ignored-patterns=/**/user/**
