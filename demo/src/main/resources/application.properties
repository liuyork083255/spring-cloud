logging.level.root=info
# 注册 consul 配置
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500

# 本服务端口
server.port=8080
# 本服务名称
spring.application.name=DEMO-SERVER
spring.cloud.consul.discovery.service-name=${spring.application.name}
# consul 心跳检测时间间隔
spring.cloud.consul.discovery.health-check-interval=5s
# consul 心跳检测访问 uri
spring.cloud.consul.discovery.health-check-path=/health

################################ feign 中的 ribbon 配置 ########################################

#请求处理的超时时间
#ribbon.ReadTimeout=2000
#请求连接的超时时间
#ribbon.ConnectTimeout=1000

# 上面两个配置是该项目请求远程服务的全局配置
# 如果不同的服务想设置不同的超时时间，可以使用
# ORDER-SERVER.ribbon.ConnectTimeout = 500
# ORDER-SERVER.ribbon.ReadTimeout = 1000
# USER-SERVER.ribbon.ConnectTimeout = 1000
# USER-SERVER.ribbon.ReadTimeout = 2000

# ribbon 重连机制
# ORDER-SERVER.ribbon.MaxAutoRetries = n ---> 表示当前服务访问重试次数，如果n次都失败后会更换服务
# ORDER-SERVER.ribbon.MaxAutoRetriesNextServer = m ---> 表示更换服务的次数，一般这个值是小于服务数量


################################ feign 中的 hystrix 配置 #########################################
# 默认 feign 的 hystrix 是关闭的，所以需要手动开启（Note:这种是全局关闭，如果只想关闭个别服务熔断，也是可以配置的，参考建材第六章）
feign.hystrix.enabled=true
# 熔断超时时间（Note:这个时间一般要考虑大于重连 ribbon 时间，因为ribbon在重连就熔断了，那么ribbon的重连机制就没有意思了）
# Note:其实熔断也是可以灵活配置，但是太过于灵活了，原始下面的default可以改为 @FeignClient 标记的方法名称，
# 那么这个方法就可以使用特殊的熔断时间了
# eg：feign-api模块下面有UserFeignClient类的query方法：
# hystrix.command.query.execution.isolation.thread.timeoutInMilliseconds = 3000
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 5000

